package Polocky::Setup::Helper::WAF::CatalystLike;
use strict;
use warnings;
use base 'Polocky::Setup::Helper';
sub generate_path_option_names { qw/ target / }
sub is_append_files { 1 } # append type helper

1;

__DATA__

---
file: view/____var-polocky_appprefix-var____/index.tt
template: |
  [[% '%' %] INCLUDE header.inc [% '%' %]]
  <p>
  [[% '%' %] echo(name) [% '%' %]] is Generated by Polocky::WAF::CatalystLike 
  </p>
  [[% '%' %] INCLUDE footer.inc [% '%' %]]
---
file: view/share/____var-polocky_appprefix-var____/footer.inc
template: "<hr>\n</body>\n</html>\n"
---
file: view/share/____var-polocky_appprefix-var____/header.inc
template: |
  <html>
  <head>
  <title>[[% '%' %] name [% '%' %]]</title>
  </head>
  <body>
  <div id="header">
  <h3>Hello [[% '%' %] name [% '%' %]]</h3>
  </div>
---
file: view/share/common/common.inc
template: |
  [[% '%' %]- FILTER null -[% '%' %]]
  
  [[% '%' %] MACRO echo(str) BLOCK [% '%' %]]
  [[% '%' %] str [% '%' %]]
  [[% '%' %] END -[% '%' %]]
  
  [[% '%' %]- END #FILTER null -[% '%' %]]
---
file: etc/____var-polocky_appprefix-var____.psgi
template: |
  use warnings;
  use strict;
  use FindBin;
  use Path::Class;
  use lib Path::Class::Dir->new($FindBin::Bin, '..', 'lib')->stringify;
  use [% module %]::[% polocky_target %];
  my $app = [% module %]::[% polocky_target %]->new;
  my $handler = $app->psgi_handler ;
---
file: lib/____var-module_path-var____/____var-polocky_target_path-var____.pm
template: |
  package [% module %]::[% polocky_target %];
  use Polocky::Class;
  extends 'Polocky::WAF::CatalystLike';
  
  __POLOCKY__;
---
file: lib/____var-module_path-var____/____var-polocky_target_path-var____/View/TT.pm
template: |
  package [% module %]::[% polocky_target %]::View::TT;
  use Polocky::Class;
  extends 'Polocky::WAF::View::TT';
  
  __POLOCKY__;
---
file: lib/____var-module_path-var____/____var-polocky_target_path-var____/Controller/Root.pm
template: |
  package [% module %]::[% polocky_target %]::Controller::Root;
  use Polocky::Class;
  BEGIN { extends 'Polocky::WAF::CatalystLike::Controller' };
  __PACKAGE__->namespace('');
  
  sub index : Path : Args(0) {
      my ( $self, $c ) = @_;
      $c->stash->{name} = '[% module %]::[% polocky_target %]';
  }
  
  sub end  :ActionClass('RenderView') {}
  
  __POLOCKY__;
